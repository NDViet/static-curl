name: Build and Release

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      curl_version:
        description: 'curl version to build (default: 8.15.0)'
        required: false
        default: '8.15.0'
      do_release:
        description: 'Upload release assets?'
        required: false
        default: false
        type: boolean

jobs:
  release:
    if: github.event_name == 'workflow_dispatch' && (inputs.do_release == true || inputs.do_release == 'true')
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.set_tag.outputs.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create and push tag
        id: set_tag
        run: |
          TAG="${{ github.event.inputs.curl_version }}"
          git fetch --tags
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists, skipping creation."
          else
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git tag "$TAG"
            git push origin "$TAG"
          fi
          echo "tag_name=$TAG" >> $GITHUB_OUTPUT
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.set_tag.outputs.tag_name }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: [release]
    if: always()
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: amd64
            platform: linux/amd64
          - arch: aarch64
            platform: linux/arm64
          - arch: armhf
            platform: linux/arm/v7
          - arch: armv7
            platform: linux/arm/v7
          - arch: i386
            platform: linux/386
          - arch: ppc64le
            platform: linux/ppc64le
      fail-fast: false
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Run build in container
        env:
          CURL_VERSION: ${{ github.event.inputs.curl_version || '8.15.0' }}
        run: |
          docker run --rm \
            --platform=${{ matrix.platform }} \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            -e ARCH=${{ matrix.arch }} \
            -e CURL_VERSION=${{ env.CURL_VERSION }} \
            alpine:latest \
            sh -c "apk add --no-cache git bash curl gnupg perl build-base clang openssl-dev nghttp2-dev nghttp2-static libssh2-dev libssh2-static openssl-libs-static zlib-static wget && bash build.sh && ls -lh /workspace/curl-*"
      - name: Check output
        run: |
          ls -lrth ${{ github.workspace }}
      - name: Upload Release Asset
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') || (github.event_name == 'workflow_dispatch' && (inputs.do_release == true || inputs.do_release == 'true'))
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: false
          files: curl-${{ matrix.arch }}
          tag_name: ${{ github.event.inputs.curl_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
